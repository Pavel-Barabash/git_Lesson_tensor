'''
–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é. –î–ª—è –Ω–µ—ë –Ω–∞–ø–∏—Å–∞—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞:
    –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏;
    –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏;
    –∑–∞–º–µ–¥–ª–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞. –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
'''

import logging
import time


def dec_log(func):
    '''–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏'''
    def wrapper():
        logging.basicConfig(level='DEBUG', filename='mylog.log')
        print('–õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª mylog.log')
        print('Start')
        func()
        logging.debug("Hello World, i'm debug")
        logging.info("Hello World, i'm info")
        logging.warning("Hello World, i'm warning")
        logging.error("Hello World, i'm error")
        logging.critical("Hello World, i'm critical")
        print('End')
    return wrapper


def dec_time(func):
    '''–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏'''
    def wrapper():
        print('Start')
        start_time = time.perf_counter()
        func()
        end_time = time.perf_counter()
        print(f'–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ {end_time-start_time:0.6f}')
        print('End')
    return wrapper


def dec_sleep(func):
    '''–ó–∞–º–µ–¥–ª—è–µ–º —á–∞—Å—Ç–æ—Ç—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏'''
    def wrapper():
        print('Start')
        start_time = time.perf_counter()
        time.sleep(5)
        func()
        end_time = time.perf_counter()
        print(f'–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ—Å–ª–µ –µ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏—è:')
        print(f'{end_time - start_time:0.0f} —Å–µ–∫—É–Ω–¥')
        print('End')
    return wrapper


def draw_triangle():
    """–í—ã–≤–æ–¥–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ª–µ—Å–µ–Ω–∫—É –∏–∑ –∑–≤–µ–∑–¥–æ—á–µ–∫ –æ—Ç 1 –¥–æ 10 —à—Ç—É–∫"""
    for i in range(1, 11):
        print('*' * i)
    return "üòé"


print('–í—ã–≤–µ–¥–µ–º –ª–µ—Å–µ–Ω–∫—É, —Å –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å')
draw_triangle()

print('')
print('–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º 3 –¥–µ–π—Å—Ç–≤–∏—è, —Å –ø–æ–º–æ—â—å—é –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤:')
print('1) –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏')
print('2) –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏')
print('3) –∑–∞–º–µ–¥–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞. –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —á–∞—Å—Ç–æ—Ç—É –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.')
request = int(input('–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ(1,2,3): '))

if request == 1:
    dec_twin = dec_log(draw_triangle)
    dec_twin()
elif request == 2:
    dec_twin = dec_time(draw_triangle)
    dec_twin()
elif request == 3:
    dec_twin = dec_sleep(draw_triangle)
    dec_twin()
else:
    print('–ö–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –≤–µ—Ä–Ω–æ')
